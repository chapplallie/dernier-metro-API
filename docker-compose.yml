services:
  api:
    build: 
      context: ./api
      dockerfile: Dockerfile.v1
    image: dernier-metro-api:v1
    environment:
      - PORT=5000
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      
    ports:
      - "5000:5000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 1s
    depends_on:
      - postgres

  swagger:
    image: swaggerapi/swagger-ui
    environment:
      - SWAGGER_JSON=/openapi/openapi.yaml
    volumes:
      - ./openapi/openapi.yaml:/openapi/openapi.yaml:ro
    ports:
      - "8080:8080"
    depends_on:
      - api

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      retries: 5

volumes:
  pgdata: